<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Handy Code</title><link>https://ingvarlistard.github.io/</link><description>Recent content on Handy Code</description><generator>Hugo -- gohugo.io</generator><language>ru-ru</language><lastBuildDate>Wed, 29 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://ingvarlistard.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Nuxt + Django + GraphQL на примере</title><link>https://ingvarlistard.github.io/p/nuxt-django-graphql/</link><pubDate>Mon, 16 Mar 2020 00:00:00 +0000</pubDate><guid>https://ingvarlistard.github.io/p/nuxt-django-graphql/</guid><description>&lt;img src="https://ingvarlistard.github.io/p/nuxt-django-graphql/cmnlwmcwqu2drhdusjqe2nn6luq.jpeg" alt="Featured image of post Nuxt + Django + GraphQL на примере" />&lt;h2 id="предисловие">Предисловие&lt;/h2>
&lt;p>&lt;strong>Nuxt&lt;/strong> — &amp;ldquo;фреймворк над фреймворком Vue&amp;rdquo; или популярная конфигурация Vue-based приложений с использованием лучших практик разработки на Vue. Среди них: организация каталогов приложения; включение и преконфигурация самых популярных инструментов в виде Nuxt модулей; включение &lt;a class="link" href="https://vuex.vuejs.org/ru/" target="_blank" rel="noopener"
>Vuex&lt;/a> по-умолчанию в любую конфигурацию; готовый и преднастроенный &lt;a class="link" href="https://ssr.vuejs.org/ru/#%d1%87%d1%82%d0%be-%d1%82%d0%b0%d0%ba%d0%be%d0%b5-%d1%81%d0%b5%d1%80%d0%b2%d0%b5%d1%80%d0%bd%d1%8b%d0%b9-%d1%80%d0%b5%d0%bd%d0%b4%d0%b5%d1%80%d0%b8%d0%bd%d0%b3-ssr" target="_blank" rel="noopener"
>SSR&lt;/a> с &lt;a class="link" href="https://vue-loader-v14.vuejs.org/ru/features/hot-reload.html" target="_blank" rel="noopener"
>hot-reloading&amp;rsquo;ом&lt;/a>&lt;/p>
&lt;p>&lt;strong>Django&lt;/strong> — самый популярный веб-фреймворк на почти самом популярном языке программирования на сегодняшний день — Python. Сами разработчики позиционируют проект как &amp;ldquo;Веб-фреймворк для перфекционистов с дедлайнами&amp;rdquo;. Представляет из себя решение &amp;ldquo;всё в одном&amp;rdquo; и позволяет в кратчайшие сроки построить MVP вашего веб-приложения.&lt;/p>
&lt;p>&lt;strong>GraphQL&lt;/strong> — язык запросов изначально созданный компанией Facebook. В статье будет говориться о конкретных реализациях протокола этого языка, а именно библиотек &lt;strong>Apollo&lt;/strong> для фронтенда и &lt;strong>graphene&lt;/strong> для бэкенда.&lt;/p>
&lt;h2 id="о-чем-и-для-кого-эта-статья">О чем и для кого эта статья&lt;/h2>
&lt;p>В этой статье вы сможете узнать как можно собрать dev-окружение современного &lt;a class="link" href="https://ru.wikipedia.org/wiki/%d0%9e%d0%b4%d0%bd%d0%be%d1%81%d1%82%d1%80%d0%b0%d0%bd%d0%b8%d1%87%d0%bd%d0%be%d0%b5_%d0%bf%d1%80%d0%b8%d0%bb%d0%be%d0%b6%d0%b5%d0%bd%d0%b8%d0%b5" target="_blank" rel="noopener"
>SPA&lt;/a> приложения с server side рендерингом, на основе фреймворков Django и Nuxt, а также их сообщения посредством GraphQL API.&lt;/p>
&lt;p>На примере простейшего приложения со списком задач, я попытался рассказать об основных проблемах с которыми я столкнулся в процессе построения приложения на выбранном стеке.&lt;/p>
&lt;p>Описание старался делать как можно более понятным, в том числе и новичкам в программировании (коим, буду честен, я считаю и себя), и приводить как можно больше ссылок.&lt;/p>
&lt;p>Исходя из того, что эту статью вы читаете на русском языке, я делаю смелое предположение, что и остальные материалы по программированию вы также предпочитаете читать на русском, поэтому все ссылки я старался подбирать в соответствии с этим предположением насколько это возможно.&lt;/p>
&lt;p>Искрене надеюсь, что статья поможет сэкономить хоть немного времени тем энтузиастам, кто решит создать свое приложения на базе приведенных выше технологий, а также дать быстрый старт всем интересующимся без необходимости проводить часы и дни в поисках причин возникающих проблем, а затем и их решений на просторах интернета.&lt;/p>
&lt;p>Построение приложения будет вестись поэтапно, чтобы на каждом этапе можно было удостовериться что всё работает правильно.&lt;/p>
&lt;h2 id="перед-началом">Перед началом&lt;/h2>
&lt;p>Убедитесь, что у вас уже установлен &lt;a class="link" href="https://nodejs.org/ru/" target="_blank" rel="noopener"
>node.js&lt;/a> и интерпретатор &lt;a class="link" href="https://www.python.org/downloads/" target="_blank" rel="noopener"
>python&lt;/a>. В примере используются версии: &lt;strong>13.9&lt;/strong> и &lt;strong>3.7&lt;/strong> соответственно.&lt;/p>
&lt;p>В качестве менеджера виртуального окружения python в статье будет использоваться &lt;a class="link" href="https://webdevblog.ru/pipenv-rukovodstvo-po-novomu-instrumentu-python/" target="_blank" rel="noopener"
>pipenv&lt;/a>.&lt;/p>
&lt;p>Консольные команды в статье запускаются в оболочке bash. Если вы пользователь Windows, то вместо команд &lt;code>cd&lt;/code>, &lt;code>mv&lt;/code>, &lt;code>mkdir&lt;/code> используйте аналоги, и благодаря кросс-платформенной природе python и node, всё остальное должно работать вне зависимости от ОС.&lt;/p>
&lt;p>В качестве базы данных для простоты будет использоваться Sqlite, которая не требует дополнительной конфигурации.&lt;/p>
&lt;p>Версии всех пакетов вы всегда можете посмотреть в &lt;a class="link" href="https://github.com/IngvarListard/nuxt-django-graphql-example" target="_blank" rel="noopener"
>репозитории&lt;/a> статьи. Ниже я приведу те, что мы будем устанавливать вручную.&lt;/p>
&lt;p>&lt;strong>Python библиотеки&lt;/strong>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Библиотека&lt;/th>
&lt;th>Версия&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a class="link" href="https://docs.djangoproject.com/en/2.2/releases/2.2/" target="_blank" rel="noopener"
>django&lt;/a>&lt;/td>
&lt;td>2.2&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="link" href="https://docs.graphene-python.org/projects/django/en/latest/" target="_blank" rel="noopener"
>graphene-django&lt;/a>&lt;/td>
&lt;td>2.8.2&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="link" href="https://github.com/adamchainz/django-cors-headers" target="_blank" rel="noopener"
>django-cors-headers&lt;/a>&lt;/td>
&lt;td>3.2&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;strong>Javascript библиотеки&lt;/strong>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Библиотека&lt;/th>
&lt;th>Версия&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a class="link" href="https://nuxtjs.org" target="_blank" rel="noopener"
>Nuxt&lt;/a>&lt;/td>
&lt;td>2.11&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="link" href="https://github.com/nuxt-community/apollo-module" target="_blank" rel="noopener"
>nuxtjs/apollo&lt;/a>&lt;/td>
&lt;td>4.0.1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="link" href="https://v15.vuetifyjs.com/en/" target="_blank" rel="noopener"
>nuxtjs/vuetify&lt;/a>&lt;/td>
&lt;td>0.5.5&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="link" href="https://github.com/microcipcip/cookie-universal/tree/master/packages/cookie-universal-nuxt" target="_blank" rel="noopener"
>cookie-universal-nuxt&lt;/a>&lt;/td>
&lt;td>2.1.2&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a class="link" href="https://github.com/apollographql/graphql-tag" target="_blank" rel="noopener"
>graphql-tag&lt;/a>&lt;/td>
&lt;td>2.10&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="django">Django&lt;/h2>
&lt;h3 id="создание-проекта-и-окружения">Создание проекта и окружения&lt;/h3>
&lt;p>Для начала необходимо установить менеджер виртуального окружения. В примере я буду использовать pipenv. Для установки:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">pip install pipenv
&lt;/code>&lt;/pre>&lt;/div>&lt;p>В некоторых операционных системах для этого действия могут потребоваться права суперпользователя. Также pipenv можно установить из репозитория вашей операционной системы.&lt;/p>
&lt;p>Создадим директорию с проектом и инициализируем в ней окружение &lt;code>pipenv&lt;/code>. В моем случае проект будет располагаться по пути &lt;code>~/Documents/projects/todo-list&lt;/code>. Создадим эту директорию и перейдем в неё.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">mkdir ~/Documents/projects/todo-list
&lt;span class="nb">cd&lt;/span> ~/Documents/projects/todo-list
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Создаем виртуальное окружение и одновременно устанавливаем &lt;code>django&lt;/code> и &lt;code>graphene_django&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">pipenv install &lt;span class="nv">django&lt;/span>&lt;span class="o">==&lt;/span>2.2.10 graphene_django
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Библиотека &lt;code>graphene_django&lt;/code> позволяет описывать схему GraphQL API на основе моделей Django ORM. Очень удобно, но как по мне, со связыванием таблиц БД и фронтом напрямую нужно быть очень осторожным.&lt;/p>
&lt;p>Для начала активируем виртуальное окружение pipenv. Далее в статье будет предполагаться, что все комманды будут выполняться внутри окружения.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">pipenv shell &lt;span class="c1"># активируем виртуальное окружение pipenv&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Создаем проект Django.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">django-admin createapp backend
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="настройка">Настройка&lt;/h3>
&lt;h4 id="перенос-managepy">Перенос manage.py&lt;/h4>
&lt;p>Так как фронтенд и бэкенд нашего todo-листа будет находиться в одной директории, было бы неплохо иметь все управляющие файлы в корневой директории проекта. В Django управляющим файлом является &lt;code>manage.py&lt;/code>, давайте вынесем его из директории &lt;code>backend&lt;/code> на уровень повыше.&lt;/p>
&lt;p>Для этого, из корневой директории проекта:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">mv backend/manage.py .
&lt;/code>&lt;/pre>&lt;/div>&lt;p>После перемещения нужно исправить путь к файлу настроек внутри файла &lt;code>manage.py&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="c1"># manage.py&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">os&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">sys&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;__main__&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="c1"># укажите путь к файлу настроек вашего проекта&lt;/span>
&lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">environ&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">setdefault&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;DJANGO_SETTINGS_MODULE&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;backend.backend.settings&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="o">...&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Также в файле &lt;code>backend/backend/settings.py&lt;/code> приведем следующие переменные к виду:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="n">ROOT_URLCONF&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;backend.backend.urls&amp;#39;&lt;/span>
&lt;span class="n">WSGI_APPLICATION&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;backend.backend.wsgi.application&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="добавление-graphene_django">Добавление graphene_django&lt;/h4>
&lt;p>В файле &lt;code>backend/backend/settings.py&lt;/code> в переменную &lt;code>INSTALLED_APPS&lt;/code> добавляем установленный ранее &lt;code>graphene_django&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="c1"># backend/backend/settings.py&lt;/span>
&lt;span class="n">INSTALLED_APPS&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="o">...&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s1">&amp;#39;graphene_django&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="проверяем-работоспособность">Проверяем работоспособность&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">python manage.py runserver
&lt;/code>&lt;/pre>&lt;/div>&lt;p>По-умолчанию сервер запускается на порту &lt;code>8000&lt;/code>. Переходим на http://localhost:8000/, он должен нас встречать следующей картиной:&lt;/p>
&lt;details>
&lt;summary>&lt;strong>Django hello&lt;/strong>&lt;/summary>
&lt;section>
&lt;figure
class="gallery-image"
style="
flex-grow: 172;
flex-basis: 414px"
>
&lt;a href="https://ingvarlistard.github.io/p/nuxt-django-graphql/hhb-rytssx5jg9nspydgu6lwenc.png" data-size="597x346">
&lt;img src="https://ingvarlistard.github.io/p/nuxt-django-graphql/hhb-rytssx5jg9nspydgu6lwenc.png"
width="597"
height="346"
srcset="https://ingvarlistard.github.io/p/nuxt-django-graphql/hhb-rytssx5jg9nspydgu6lwenc_hua2e903f190b514e479de90d1bfb1ac90_30631_480x0_resize_box_3.png 480w, https://ingvarlistard.github.io/p/nuxt-django-graphql/hhb-rytssx5jg9nspydgu6lwenc_hua2e903f190b514e479de90d1bfb1ac90_30631_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Django hello">
&lt;/a>
&lt;figcaption>Django hello&lt;/figcaption>
&lt;/figure>
&lt;/section>
&lt;/details>
&lt;h4 id="настройка-graphene">Настройка graphene&lt;/h4>
&lt;p>После изменений ниже &lt;code>http://localhost:8000/&lt;/code> уже не будет встречать нас ракетой. В файле &lt;code>backend/backend/urls.py&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="c1"># backend/backend/urls.py&lt;/span>
&lt;span class="kn">from&lt;/span> &lt;span class="nn">django.contrib&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">admin&lt;/span>
&lt;span class="kn">from&lt;/span> &lt;span class="nn">django.urls&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">path&lt;/span>
&lt;span class="kn">from&lt;/span> &lt;span class="nn">graphene_django.views&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">GraphQLView&lt;/span>
&lt;span class="kn">from&lt;/span> &lt;span class="nn">django.conf&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">settings&lt;/span>
&lt;span class="n">urlpatterns&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="n">path&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;admin/&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">admin&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">site&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">urls&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="c1"># graphiql - мини IDE для разработки graphql запросов&lt;/span>
&lt;span class="n">path&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;graphql/&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">GraphQLView&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">as_view&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">graphiql&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">settings&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">DEBUG&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Создадим пустую &lt;a class="link" href="https://xsltdev.ru/react/graphql/schemas-and-types/" target="_blank" rel="noopener"
>схему&lt;/a>, например, в файле &lt;code>backend/backend/api.py&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="c1"># backend/todo_list/api.py&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">graphene&lt;/span>
&lt;span class="n">schema&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">graphene&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Schema&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>В файл настроек необходимо добавить переменную &lt;code>GRAPHENE&lt;/code>, в которой мы укажем путь до нашей схемы:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="c1"># /backend/backend/settings.py&lt;/span>
&lt;span class="n">GRAPHENE&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="s1">&amp;#39;SCHEMA&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;backend.backend.api.schema&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Проверяем работоспособность. Запускаем сервер уже известной командой &lt;code>runserver&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">python manage.py runserver
&lt;/code>&lt;/pre>&lt;/div>&lt;p>и переходим на http://localhost:8000/graphql/. Там нас должна встретить та самая мини &amp;ldquo;IDE&amp;rdquo; &lt;a class="link" href="https://github.com/graphql/graphiql" target="_blank" rel="noopener"
>GrapiQL&lt;/a>:&lt;/p>
&lt;details>
&lt;summary>&lt;strong>Graphiql IDE&lt;/strong>&lt;/summary>
&lt;section>
&lt;figure
class="gallery-image"
style="
flex-grow: 208;
flex-basis: 501px"
>
&lt;a href="https://ingvarlistard.github.io/p/nuxt-django-graphql/ptjbnvouc67igph8iswnrys656g.png" data-size="1051x503">
&lt;img src="https://ingvarlistard.github.io/p/nuxt-django-graphql/ptjbnvouc67igph8iswnrys656g.png"
width="1051"
height="503"
srcset="https://ingvarlistard.github.io/p/nuxt-django-graphql/ptjbnvouc67igph8iswnrys656g_huc073217815f655a5917b6e9b1826fd87_90332_480x0_resize_box_3.png 480w, https://ingvarlistard.github.io/p/nuxt-django-graphql/ptjbnvouc67igph8iswnrys656g_huc073217815f655a5917b6e9b1826fd87_90332_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Graphiql ide">
&lt;/a>
&lt;figcaption>Graphiql ide&lt;/figcaption>
&lt;/figure>
&lt;/section>
&lt;/details>
&lt;p>Ничего страшного в том, что нас встречает ошибка. Она появляется из-за того, что наша схема пуста. Мы исправим это при реализации дальше.&lt;/p>
&lt;h3 id="приложение-todo_list">Приложение todo_list&lt;/h3>
&lt;h4 id="создание-приложения">Создание приложения&lt;/h4>
&lt;p>Создадим приложение todo_list и модели к нему. Не забывайте, что все команды должны выполняться внутри окружения pipenv:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="nb">cd&lt;/span> backend
django-admin startapp todo_list
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Скрипт &lt;code>django-admin&lt;/code> не знает где находится корень нашего приложения, поэтому нам нужно немного подправить файл &lt;code>backend/todo_list/apps.py&lt;/code>, чтобы он выглядит следующим образом:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="kn">from&lt;/span> &lt;span class="nn">django.apps&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">AppConfig&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">TodoListConfig&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AppConfig&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;backend.todo_list&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Добавим наше новое приложение в &lt;code>INSTALLED_APPS&lt;/code>, что находится в файле &lt;code>settings.py&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="c1"># backend/backend/settings.py&lt;/span>
&lt;span class="n">INSTALLED_APPS&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="o">...&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s1">&amp;#39;backend.todo_list&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="o">...&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Добавим модели &lt;code>Todo&lt;/code> и &lt;code>Category&lt;/code> в файл &lt;code>backend/todo_list/models.py&lt;/code>:&lt;/p>
&lt;details>
&lt;summary>&lt;strong>models.py&lt;/strong>&lt;/summary>
&lt;section>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="c1"># backend/todo_list/models.py&lt;/span>
&lt;span class="kn">from&lt;/span> &lt;span class="nn">datetime&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">timedelta&lt;/span>
&lt;span class="kn">from&lt;/span> &lt;span class="nn">django.db&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">models&lt;/span>
&lt;span class="kn">from&lt;/span> &lt;span class="nn">django.utils&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">timezone&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Category&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">models&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Model&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">models&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">CharField&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">max_length&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">unique&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Meta&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">verbose_name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;Категория&amp;#39;&lt;/span>
&lt;span class="n">verbose_name_plural&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;Категории&amp;#39;&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="fm">__str__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">get_due_date&lt;/span>&lt;span class="p">():&lt;/span>
&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34; На выполнение задачи по-умолчанию даётся один день &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">timezone&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">now&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">timedelta&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">days&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Todo&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">models&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Model&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">title&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">models&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">CharField&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">max_length&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">250&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">text&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">models&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">TextField&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">blank&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">created_date&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">models&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">DateField&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">auto_now_add&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">due_date&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">models&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">DateField&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">default&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">get_due_date&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">category&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">models&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ForeignKey&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Category&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">related_name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;todo_list&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">on_delete&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">models&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">PROTECT&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">done&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">models&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">BooleanField&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">default&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">False&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Meta&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">verbose_name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;Задача&amp;#39;&lt;/span>
&lt;span class="n">verbose_name_plural&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;Задачи&amp;#39;&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="fm">__str__&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">title&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;/section>
&lt;/details>
&lt;p>Для того, чтобы наши модели превратились в таблицы в БД, нужно выполнить следующее:&lt;/p>
&lt;p>Создать файлы &lt;a class="link" href="https://djbook.ru/rel1.7/topics/migrations.html" target="_blank" rel="noopener"
>миграций&lt;/a>, в которых будет описываться наша текущая схема:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">python manage.py makemigrations
&lt;/code>&lt;/pre>&lt;/div>&lt;p>С примерно таким выводом:&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 568;
flex-basis: 1363px"
>
&lt;a href="https://ingvarlistard.github.io/p/nuxt-django-graphql/zadktt1beqf8wd6wt2t7ps3d1qy.png" data-size="676x119">
&lt;img src="https://ingvarlistard.github.io/p/nuxt-django-graphql/zadktt1beqf8wd6wt2t7ps3d1qy.png"
width="676"
height="119"
srcset="https://ingvarlistard.github.io/p/nuxt-django-graphql/zadktt1beqf8wd6wt2t7ps3d1qy_hu0d254fd8c9d013c10d38dfcf2492c82e_89403_480x0_resize_box_3.png 480w, https://ingvarlistard.github.io/p/nuxt-django-graphql/zadktt1beqf8wd6wt2t7ps3d1qy_hu0d254fd8c9d013c10d38dfcf2492c82e_89403_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Вывод">
&lt;/a>
&lt;figcaption>Вывод&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>Применить эти миграции командой &lt;code>migrate&lt;/code>. Т.к. это первый запуск скрипта &lt;code>migrate&lt;/code>, у нас также будут применяться миграции приложений Django:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">python manage.py migrate
&lt;/code>&lt;/pre>&lt;/div>
&lt;details>
&lt;summary>&lt;strong>Вывод консоли&lt;/strong>&lt;/summary>
&lt;section>
&lt;figure
class="gallery-image"
style="
flex-grow: 159;
flex-basis: 382px"
>
&lt;a href="https://ingvarlistard.github.io/p/nuxt-django-graphql/sscryoufym2z282jrfldthrscjw.png" data-size="845x530">
&lt;img src="https://ingvarlistard.github.io/p/nuxt-django-graphql/sscryoufym2z282jrfldthrscjw.png"
width="845"
height="530"
srcset="https://ingvarlistard.github.io/p/nuxt-django-graphql/sscryoufym2z282jrfldthrscjw_hud494317920ab598d554deae3b76404d4_503726_480x0_resize_box_3.png 480w, https://ingvarlistard.github.io/p/nuxt-django-graphql/sscryoufym2z282jrfldthrscjw_hud494317920ab598d554deae3b76404d4_503726_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Вывод консоли">
&lt;/a>
&lt;figcaption>Вывод консоли&lt;/figcaption>
&lt;/figure>
&lt;/section>
&lt;/details>
&lt;h4 id="создание-graphql-api">Создание GraphQL API&lt;/h4>
&lt;p>Опишем &lt;a class="link" href="https://xsltdev.ru/react/graphql/schemas-and-types/" target="_blank" rel="noopener"
>типы&lt;/a>, &lt;a class="link" href="https://xsltdev.ru/react/graphql/queries-and-mutations/" target="_blank" rel="noopener"
>создадим запросы и мутации&lt;/a> для наших новых моделей. Для этого в директории приложения &lt;code>todo_list&lt;/code> создадим файл &lt;code>schema.py&lt;/code>, со следующим содержимым:&lt;/p>
&lt;details>
&lt;summary>&lt;strong>schema.py&lt;/strong>&lt;/summary>
&lt;section>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="c1"># backend/todo_list/schema.py&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">graphene&lt;/span>
&lt;span class="kn">from&lt;/span> &lt;span class="nn">graphene_django&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">DjangoObjectType&lt;/span>
&lt;span class="kn">from&lt;/span> &lt;span class="nn">backend.todo_list.models&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Todo&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Category&lt;/span>
&lt;span class="c1"># С помощью graphene_django привязываем типы к моделям,&lt;/span>
&lt;span class="c1"># что позволит ходить по всей вложенности базы данных как угодно,&lt;/span>
&lt;span class="c1"># прямо из интерфейса GraphiQL.&lt;/span>
&lt;span class="c1"># Однако будьте осторожны, связывание таблиц практически напрямую&lt;/span>
&lt;span class="c1"># с фронтом может быть чревато при росте проекта. Думаю такой способ&lt;/span>
&lt;span class="c1"># подходит преимущественно для небольших CRUD приложений.&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">CategoryNode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">DjangoObjectType&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Meta&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">model&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Category&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">TodoNode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">DjangoObjectType&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Meta&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">model&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Todo&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Query&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">graphene&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ObjectType&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34; Описываем запросы и возвращаемые типы данных &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;span class="n">todo_list&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">graphene&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">List&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">TodoNode&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">categories&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">graphene&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">List&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CategoryNode&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">resolve_todo_list&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">info&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">Todo&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">objects&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">all&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">order_by&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;-id&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">resolve_categories&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">info&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">Category&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">objects&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">all&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Mutation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">graphene&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ObjectType&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34; В мутации описываем типы запросов (простите за каламбур),
&lt;/span>&lt;span class="s2"> типы возвращаемых данных и типы принимаемых переменных
&lt;/span>&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;span class="n">add_todo&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">graphene&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Field&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">TodoNode&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">title&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">graphene&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">required&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">text&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">graphene&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="p">(),&lt;/span>
&lt;span class="n">due_date&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">graphene&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Date&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">required&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="n">category&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">graphene&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">required&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="n">remove_todo&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">graphene&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Field&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">graphene&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Boolean&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">todo_id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">graphene&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ID&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="n">toggle_todo&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">graphene&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Field&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">TodoNode&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">todo_id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">graphene&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ID&lt;/span>&lt;span class="p">())&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">resolve_add_todo&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">info&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">**&lt;/span>&lt;span class="n">kwargs&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">category&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">_&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Category&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">objects&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get_or_create&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">kwargs&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pop&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;category&amp;#39;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">Todo&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">objects&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">create&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">category&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">category&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">**&lt;/span>&lt;span class="n">kwargs&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">resolve_remove_todo&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">info&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">todo_id&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">try&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">Todo&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">objects&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">todo_id&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">delete&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">except&lt;/span> &lt;span class="n">Todo&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">DoesNotExist&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="kc">False&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">resolve_toggle_todo&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">info&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">todo_id&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">todo&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Todo&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">objects&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">todo_id&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">todo&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">done&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">todo&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">done&lt;/span>
&lt;span class="n">todo&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">save&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">todo&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;/section>
&lt;/details>
&lt;p>После создания классов мутации и запроса, их нужно добавить в нашу схему. Как вы, возможно, помните схему мы описывали в файле &lt;code>api.py&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="c1"># backend/backend/api.py&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">graphene&lt;/span>
&lt;span class="kn">from&lt;/span> &lt;span class="nn">backend.todo_list.schema&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Query&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Mutation&lt;/span>
&lt;span class="n">schema&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">graphene&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Schema&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">query&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">Query&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">mutation&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">Mutation&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Если хотите лучше понять происходящее, можете прочитать &lt;a class="link" href="https://habr.com/ru/post/461939/" target="_blank" rel="noopener"
>эту&lt;/a> статью на Хабре, или обратиться к документации &lt;a class="link" href="https://docs.graphene-python.org/en/latest/types/" target="_blank" rel="noopener"
>Graphene&lt;/a> (англ.).&lt;/p>
&lt;h4 id="проверка-api">Проверка API&lt;/h4>
&lt;p>ID записей в примерах ниже могут различаться с ID ваших записей.&lt;/p>
&lt;p>Запускаем сервер привычной командой &lt;code>runserver&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">python manage.py runserver
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Идем по пути http://localhost:8000/graphql/. Там нас должен встречать уже знакомый интерфейс &lt;code>graphiql&lt;/code>. И как вы, возможно, заметили ошибка пропала.&lt;/p>
&lt;p>Давайте проверим получившиеся запросы и мутации.&lt;/p>
&lt;details>
&lt;summary>&lt;strong>addTodo&lt;/strong>&lt;/summary>
&lt;section>
&lt;p>&lt;strong>Мутация&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-graphql" data-lang="graphql">&lt;span class="w"> &lt;/span>&lt;span class="kd">mutation&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nv">$title&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nc">String&lt;/span>&lt;span class="p">!&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nv">$text&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nc">String&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nv">$dueDate&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nc">Date&lt;/span>&lt;span class="p">!&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nv">$category&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nc">String&lt;/span>&lt;span class="p">!&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nc">addTodo&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="py">title&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nv">$title&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nc">text&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nv">$text&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nc">dueDate&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nv">$dueDate&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nc">category&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nv">$category&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nc">todo&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="py">id&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="py">title&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="py">text&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="py">done&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="py">createdDate&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="py">dueDate&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="py">category&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="py">id&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="py">name&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Переменные&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-graphql" data-lang="graphql">&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;title&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;First Todo&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;text&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;Just do it!&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;dueDate&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;2020-10-17&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;category&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;Работа&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Результат&lt;/strong>&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 184;
flex-basis: 443px"
>
&lt;a href="https://ingvarlistard.github.io/p/nuxt-django-graphql/ygwilohcsxhxvwn0x65lk661nt0.png" data-size="886x480">
&lt;img src="https://ingvarlistard.github.io/p/nuxt-django-graphql/ygwilohcsxhxvwn0x65lk661nt0.png"
width="886"
height="480"
srcset="https://ingvarlistard.github.io/p/nuxt-django-graphql/ygwilohcsxhxvwn0x65lk661nt0_hu2612775fb225aa202d79f48c6e21f280_63114_480x0_resize_box_3.png 480w, https://ingvarlistard.github.io/p/nuxt-django-graphql/ygwilohcsxhxvwn0x65lk661nt0_hu2612775fb225aa202d79f48c6e21f280_63114_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Результат">
&lt;/a>
&lt;figcaption>Результат&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;/section>
&lt;/details>
&lt;p>В результате этой мутации у нас создалось две записи:&lt;/p>
&lt;ul>
&lt;li>&lt;code>Todo&lt;/code> т.к. собственно мутация для этого и написана;&lt;/li>
&lt;li>&lt;code>Category&lt;/code>, т.к. в базе не оказалось категорий с названием &amp;ldquo;Работа&amp;rdquo;, а метод &lt;code>get_or_create&lt;/code> говорит за себя сам.&lt;/li>
&lt;/ul>
&lt;details>
&lt;summary>&lt;strong>todoList и categories&lt;/strong>&lt;/summary>
&lt;section>
&lt;p>&lt;strong>Запрос&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-graphql" data-lang="graphql">&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="py">todoList&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="py">id&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="py">title&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="py">text&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="py">createdDate&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="py">dueDate&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="py">category&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="py">id&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="py">name&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="py">categories&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="py">id&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="py">name&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Реузльтат&lt;/strong>&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 153;
flex-basis: 367px"
>
&lt;a href="https://ingvarlistard.github.io/p/nuxt-django-graphql/vua6horn_mwn6fvz2souvalge7e.png" data-size="650x424">
&lt;img src="https://ingvarlistard.github.io/p/nuxt-django-graphql/vua6horn_mwn6fvz2souvalge7e.png"
width="650"
height="424"
srcset="https://ingvarlistard.github.io/p/nuxt-django-graphql/vua6horn_mwn6fvz2souvalge7e_hu65d776d28b3e164e071500bb98538ebb_43115_480x0_resize_box_3.png 480w, https://ingvarlistard.github.io/p/nuxt-django-graphql/vua6horn_mwn6fvz2souvalge7e_hu65d776d28b3e164e071500bb98538ebb_43115_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Результат">
&lt;/a>
&lt;figcaption>Результат&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;/section>
&lt;/details>
&lt;details>
&lt;summary>&lt;strong>toggleTodo&lt;/strong>&lt;/summary>
&lt;section>
&lt;p>&lt;strong>Мутация&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-graphql" data-lang="graphql">&lt;span class="kd">mutation&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$todoId&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nc">ID&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nc">toggleTodo&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="py">todoId&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nv">$todoId&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nc">id&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="py">title&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="py">text&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="py">createdDate&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="py">dueDate&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="py">category&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="py">id&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="py">name&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="py">done&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Переменные&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-graphql" data-lang="graphql">&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;todoId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="sc">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Результат&lt;/strong>:&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 183;
flex-basis: 441px"
>
&lt;a href="https://ingvarlistard.github.io/p/nuxt-django-graphql/oangcw2rkfy2clb-sgjfgbrghzw.png" data-size="888x483">
&lt;img src="https://ingvarlistard.github.io/p/nuxt-django-graphql/oangcw2rkfy2clb-sgjfgbrghzw.png"
width="888"
height="483"
srcset="https://ingvarlistard.github.io/p/nuxt-django-graphql/oangcw2rkfy2clb-sgjfgbrghzw_hu7464e95f854a44b923b5c5021eae6669_51472_480x0_resize_box_3.png 480w, https://ingvarlistard.github.io/p/nuxt-django-graphql/oangcw2rkfy2clb-sgjfgbrghzw_hu7464e95f854a44b923b5c5021eae6669_51472_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Результат">
&lt;/a>
&lt;figcaption>Результат&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;/section>
&lt;/details>
&lt;details>
&lt;summary>&lt;strong>removeTodo&lt;/strong>&lt;/summary>
&lt;section>
&lt;p>&lt;strong>Мутация&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-graphql" data-lang="graphql">&lt;span class="kd">mutation&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">$todoId&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nc">ID&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nc">removeTodo&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="py">todoId&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nv">$todoId&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Переменные можно оставить из предыдущей мутации.&lt;/p>
&lt;p>&lt;strong>Результат&lt;/strong>&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 184;
flex-basis: 443px"
>
&lt;a href="https://ingvarlistard.github.io/p/nuxt-django-graphql/xovn268dblwy2d4gp97ahgnve6s.png" data-size="886x480">
&lt;img src="https://ingvarlistard.github.io/p/nuxt-django-graphql/xovn268dblwy2d4gp97ahgnve6s.png"
width="886"
height="480"
srcset="https://ingvarlistard.github.io/p/nuxt-django-graphql/xovn268dblwy2d4gp97ahgnve6s_hu5f4e6d3d1bb47870f8b7efe3a9bfba45_24307_480x0_resize_box_3.png 480w, https://ingvarlistard.github.io/p/nuxt-django-graphql/xovn268dblwy2d4gp97ahgnve6s_hu5f4e6d3d1bb47870f8b7efe3a9bfba45_24307_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Результат">
&lt;/a>
&lt;figcaption>Результат&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;/section>
&lt;/details>
&lt;h2 id="nuxt">Nuxt&lt;/h2>
&lt;h3 id="создание-nuxt-приложения">Создание Nuxt приложения&lt;/h3>
&lt;p>Откройте консоль внутри корневой директории проекта и запустите скрипт установки &lt;code>Nuxt&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">npx create-nuxt-app frontend
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Запустится очень простой и понятный скрипт установки, который предложит указать описание проекта и предоставит на выбор для установки несколько библиотек. Можете выбрать, что захотите, но из рекомендуемых пунктов я бы посоветовал выбрать &amp;ldquo;Custom UI Framework: vuetify&amp;rdquo;, т.к. в примере используется именно он, и &amp;ldquo;Rendering mode: Universal&amp;rdquo;, т.к. в статье рассматривается пример именно с SSR.&lt;/p>
&lt;p>Пример моей конфигурации:&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 333;
flex-basis: 799px"
>
&lt;a href="https://ingvarlistard.github.io/p/nuxt-django-graphql/svcmav9eve7fwvxkvks75i7b3-y.png" data-size="976x293">
&lt;img src="https://ingvarlistard.github.io/p/nuxt-django-graphql/svcmav9eve7fwvxkvks75i7b3-y.png"
width="976"
height="293"
srcset="https://ingvarlistard.github.io/p/nuxt-django-graphql/svcmav9eve7fwvxkvks75i7b3-y_hu8356fdecbcef694ab48121358e16e4f8_104364_480x0_resize_box_3.png 480w, https://ingvarlistard.github.io/p/nuxt-django-graphql/svcmav9eve7fwvxkvks75i7b3-y_hu8356fdecbcef694ab48121358e16e4f8_104364_1024x0_resize_box_3.png 1024w"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;p>На установку зависимостей может потребоваться некоторое время. После завершения работы скрипта вам предложат проверить его работоспособность. Давайте сделаем это:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="nb">cd&lt;/span> frontend
npm run dev
&lt;/code>&lt;/pre>&lt;/div>&lt;p>и перейдем на http://localhost:3000. Там нас должна ждать страница приветствия Nuxt + Vuetify:&lt;/p>
&lt;details>
&lt;summary>&lt;strong>Nuxt + Vuetify&lt;/strong>&lt;/summary>
&lt;section>
&lt;figure
class="gallery-image"
style="
flex-grow: 152;
flex-basis: 365px"
>
&lt;a href="https://ingvarlistard.github.io/p/nuxt-django-graphql/oimeo_qzmt-juuzhixs20put1cy.png" data-size="981x645">
&lt;img src="https://ingvarlistard.github.io/p/nuxt-django-graphql/oimeo_qzmt-juuzhixs20put1cy.png"
width="981"
height="645"
srcset="https://ingvarlistard.github.io/p/nuxt-django-graphql/oimeo_qzmt-juuzhixs20put1cy_hu296e51479efad2c257c15cae13b74939_68530_480x0_resize_box_3.png 480w, https://ingvarlistard.github.io/p/nuxt-django-graphql/oimeo_qzmt-juuzhixs20put1cy_hu296e51479efad2c257c15cae13b74939_68530_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Nuxt &amp;#43; Vuetify">
&lt;/a>
&lt;figcaption>Nuxt + Vuetify&lt;/figcaption>
&lt;/figure>
&lt;/section>
&lt;/details>
&lt;h3 id="перенос-конфигурационных-файлов">Перенос конфигурационных файлов&lt;/h3>
&lt;p>Как я говорил ранее, фронтенд и бэкенд будут находиться у нас в одной директории, поэтому было бы неплохо перенести конфигурационные файлы и зависимости на уровень повыше. Для этого из корневой папки проекта выполните:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="nb">cd&lt;/span> frontend
mv node_modules ..
mv nuxt.config.js ..
mv .gitignore ..
mv package-lock.json ..
mv package.json ..
mv .prettierrc ..
mv .eslintrc.js ..
mv .editorconfig ..
rm -rf .git
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Затем в файле &lt;code>nuxt.config.js&lt;/code> указываем корневую директорию приложения:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="c1">// nuxt.config.js
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="p">...,&lt;/span>
&lt;span class="nx">rootDir&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;frontend&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">...&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>После этого желательно еще раз убедиться в работоспособности проекта, выполнив запуск dev-сервера уже из корневой директории:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">npm run dev
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="верстка-функционального-макета">Верстка функционального макета&lt;/h3>
&lt;p>Любой компонент с префиксом &lt;code>v-&lt;/code> это компонент UI-toolkit&amp;rsquo;a Vuetify. У этой библиотеки отличная и подробная &lt;a class="link" href="https://v15.vuetifyjs.com/ru/getting-started/quick-start" target="_blank" rel="noopener"
>документация&lt;/a>.&lt;/p>
&lt;p>Если вы хотите подробнее узнать, что делает тот или иной компонент, смело вбивайте в гугл &lt;code>v-component-name&lt;/code>. Только не забывайте, что в примере используется версия vuetify 1.5.&lt;/p>
&lt;p>Приводим файл &lt;code>frontend/layouts/default.vue&lt;/code> к виду:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-vue" data-lang="vue">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-app&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-content&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-container&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">nuxt&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/v-container&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/v-content&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/v-app&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Создадим компонент нового &lt;code>Todo&lt;/code> по пути &lt;code>frontend/components/NewTodoForm.vue&lt;/code>:&lt;/p>
&lt;details>
&lt;summary>&lt;strong>NewTodoForm.vue&lt;/strong>&lt;/summary>
&lt;section>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-vue" data-lang="vue">&lt;span class="c">&amp;lt;!--&lt;/span> &lt;span class="nx">frontend&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nx">components&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nx">NewTodoForm&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">vue&lt;/span> &lt;span class="o">--&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-form&lt;/span> &lt;span class="na">ref&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;form&amp;#34;&lt;/span> &lt;span class="nt">v-model&lt;/span>&lt;span class="s">=&amp;#34;valid&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-card&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-card-text&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;pt-0 mt-0&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-layout&lt;/span> &lt;span class="na">row&lt;/span> &lt;span class="na">wrap&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-flex&lt;/span> &lt;span class="na">xs8&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--&lt;/span> &lt;span class="nx">Поле&lt;/span> &lt;span class="nx">ввода&lt;/span> &lt;span class="nx">имени&lt;/span> &lt;span class="nx">задачи&lt;/span> &lt;span class="o">--&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-text-field&lt;/span>
&lt;span class="nt">v-model&lt;/span>&lt;span class="s">=&amp;#34;newTodo.title&amp;#34;
&lt;/span>&lt;span class="s"> :rules=&amp;#34;[nonEmptyField]&amp;#34;
&lt;/span>&lt;span class="s"> label=&amp;#34;Задача&amp;#34;
&lt;/span>&lt;span class="s"> prepend-icon=&amp;#34;check_circle_outline&amp;#34;
&lt;/span>&lt;span class="s"> /&amp;gt;
&lt;/span>&lt;span class="s"> &amp;lt;/v-flex&amp;gt;
&lt;/span>&lt;span class="s"> &amp;lt;v-flex xs4&amp;gt;
&lt;/span>&lt;span class="s"> &amp;lt;!-- Поле выбора даты выполнения задачи --&amp;gt;
&lt;/span>&lt;span class="s"> &amp;lt;v-menu
&lt;/span>&lt;span class="s"> ref=&amp;#34;menu&amp;#34;
&lt;/span>&lt;span class="s"> v-model=&amp;#34;menu&amp;#34;
&lt;/span>&lt;span class="s"> :close-on-content-click=&amp;#34;false&amp;#34;
&lt;/span>&lt;span class="s"> :nudge-right=&amp;#34;40&amp;#34;
&lt;/span>&lt;span class="s"> :return-value.sync=&amp;#34;newTodo.dueDate&amp;#34;
&lt;/span>&lt;span class="s"> lazy
&lt;/span>&lt;span class="s"> transition=&amp;#34;scale-transition&amp;#34;
&lt;/span>&lt;span class="s"> offset-y
&lt;/span>&lt;span class="s"> full-width
&lt;/span>&lt;span class="s"> min-width=&amp;#34;290px&amp;#34;
&lt;/span>&lt;span class="s"> &amp;gt;
&lt;/span>&lt;span class="s"> &amp;lt;template v-slot:activator=&amp;#34;{ on }&amp;#34;&amp;gt;
&lt;/span>&lt;span class="s"> &amp;lt;v-text-field
&lt;/span>&lt;span class="s"> v-model=&amp;#34;newTodo.dueDate&amp;#34;
&lt;/span>&lt;span class="s"> :rules=&amp;#34;[nonEmptyField]&amp;#34;
&lt;/span>&lt;span class="s"> v-on=&amp;#34;on&amp;#34;
&lt;/span>&lt;span class="s"> label=&amp;#34;Дата выполнения&amp;#34;
&lt;/span>&lt;span class="s"> prepend-icon=&amp;#34;event&amp;#34;
&lt;/span>&lt;span class="s"> readonly
&lt;/span>&lt;span class="s"> /&amp;gt;
&lt;/span>&lt;span class="s"> &amp;lt;/template&amp;gt;
&lt;/span>&lt;span class="s"> &amp;lt;v-date-picker
&lt;/span>&lt;span class="s"> v-model=&amp;#34;newTodo.dueDate&amp;#34;
&lt;/span>&lt;span class="s"> no-title
&lt;/span>&lt;span class="s"> scrollable
&lt;/span>&lt;span class="s"> locale=&amp;#34;ru-ru&amp;#34;
&lt;/span>&lt;span class="s"> first-day-of-week=&amp;#34;1&amp;#34;
&lt;/span>&lt;span class="s"> &amp;gt;
&lt;/span>&lt;span class="s"> &amp;lt;v-spacer /&amp;gt;
&lt;/span>&lt;span class="s"> &amp;lt;v-btn @click=&amp;#34;menu = false&amp;#34; flat color=&amp;#34;primary&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="na">Отмена&lt;/span>&lt;span class="err">&amp;lt;/&lt;/span>&lt;span class="nt">v-btn&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-btn&lt;/span>
&lt;span class="nt">@click&lt;/span>&lt;span class="s">=&amp;#34;$refs.menu.save(newTodo.dueDate)&amp;#34;&lt;/span>
&lt;span class="na">flat&lt;/span>
&lt;span class="na">color&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;primary&amp;#34;&lt;/span>
&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">Выбрать&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/v-btn&lt;/span>
&lt;span class="o">&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/v-date-picker&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/v-menu&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/v-flex&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-flex&lt;/span> &lt;span class="na">xs12&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-textarea&lt;/span>
&lt;span class="na">v&lt;/span>&lt;span class="nt">-model&lt;/span>&lt;span class="err">=&amp;#34;&lt;/span>&lt;span class="na">newTodo.text&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="nt">:rules&lt;/span>&lt;span class="s">=&amp;#34;[nonEmptyField]&amp;#34;&lt;/span>
&lt;span class="na">label&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;Описание&amp;#34;&lt;/span>
&lt;span class="na">prepend&lt;/span>&lt;span class="nt">-icon&lt;/span>&lt;span class="err">=&amp;#34;&lt;/span>&lt;span class="na">description&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="na">hide&lt;/span>&lt;span class="nt">-details&lt;/span>
&lt;span class="na">rows&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;1&amp;#34;&lt;/span>
&lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;py-0 my-0&amp;#34;&lt;/span>
&lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/v-flex&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/v-layout&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/v-card-text&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-card-actions&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--&lt;/span> &lt;span class="nx">Селектор&lt;/span> &lt;span class="nx">категорий&lt;/span>&lt;span class="p">.&lt;/span> &lt;span class="nx">Позволяет&lt;/span> &lt;span class="nx">добавлять&lt;/span> &lt;span class="nx">несуществующие&lt;/span> &lt;span class="nx">позиции&lt;/span> &lt;span class="o">--&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-combobox&lt;/span>
&lt;span class="na">v&lt;/span>&lt;span class="nt">-model&lt;/span>&lt;span class="err">=&amp;#34;&lt;/span>&lt;span class="na">newTodo.category&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="nt">:rules&lt;/span>&lt;span class="s">=&amp;#34;[nonEmptyField]&amp;#34;&lt;/span>
&lt;span class="nt">:items&lt;/span>&lt;span class="s">=&amp;#34;categories&amp;#34;&lt;/span>
&lt;span class="na">hide&lt;/span>&lt;span class="nt">-details&lt;/span>
&lt;span class="na">label&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;Категория&amp;#34;&lt;/span>
&lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;my-0 mx-2 mb-2 pt-0&amp;#34;&lt;/span>
&lt;span class="na">prepend&lt;/span>&lt;span class="nt">-icon&lt;/span>&lt;span class="err">=&amp;#34;&lt;/span>&lt;span class="na">category&lt;/span>&lt;span class="err">&amp;#34;&lt;/span>
&lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-spacer&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-btn&lt;/span> &lt;span class="nt">:disabled&lt;/span>&lt;span class="s">=&amp;#34;!valid&amp;#34;&lt;/span> &lt;span class="nt">@click&lt;/span>&lt;span class="s">=&amp;#34;add&amp;#34;&lt;/span> &lt;span class="na">color&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;blue lighten-1&amp;#34;&lt;/span> &lt;span class="na">flat&lt;/span>
&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">Добавить&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/v-btn&lt;/span>
&lt;span class="o">&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/v-card-actions&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/v-card&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/v-form&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;NewTodoForm&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">data&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">newTodo&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">categories&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;Дом&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Работа&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Семья&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Учеба&amp;#39;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;span class="nx">valid&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">menu&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">nonEmptyField&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">text&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span>
&lt;span class="nx">text&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="o">!!&lt;/span>&lt;span class="nx">text&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;Поле не должно быть пустым&amp;#39;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nx">created&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">clear&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nx">methods&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">add&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">$emit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;add&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">newTodo&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">clear&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">$refs&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">form&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">reset&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nx">clear&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">newTodo&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">title&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">text&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">dueDate&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">category&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;/section>
&lt;/details>
&lt;p>Далее компонент существующего &lt;code>Todo&lt;/code>, там же:&lt;/p>
&lt;details>
&lt;summary>&lt;strong>TodoItem.vue&lt;/strong>&lt;/summary>
&lt;section>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-vue" data-lang="vue">&lt;span class="c">&amp;lt;!--&lt;/span> &lt;span class="nx">frontend&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nx">components&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nx">TodoItem&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">vue&lt;/span> &lt;span class="o">--&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-card&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-card-title&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;pb-1&amp;#34;&lt;/span> &lt;span class="na">style&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;overflow-wrap: break-word;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">b&lt;/span>&lt;span class="p">&amp;gt;{{&lt;/span> &lt;span class="nx">todo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">title&lt;/span> &lt;span class="p">}}&amp;lt;/&lt;/span>&lt;span class="nt">b&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-spacer&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-btn&lt;/span>
&lt;span class="err">@&lt;/span>&lt;span class="na">click&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;$emit(&amp;#39;delete&amp;#39;, todo.id)&amp;#34;&lt;/span>
&lt;span class="na">flat&lt;/span>
&lt;span class="na">small&lt;/span>
&lt;span class="na">icon&lt;/span>
&lt;span class="na">style&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;position: absolute; right: 0; top: 0&amp;#34;&lt;/span>
&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-icon&lt;/span> &lt;span class="nt">:disabled&lt;/span>&lt;span class="s">=&amp;#34;$nuxt.isServer&amp;#34;&lt;/span> &lt;span class="na">small&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">close&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/v-icon&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/v-btn&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/v-card-title&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-card-text&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;py-1&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-layout&lt;/span> &lt;span class="na">row&lt;/span> &lt;span class="na">justyfy&lt;/span>&lt;span class="nt">-center&lt;/span> &lt;span class="na">align&lt;/span>&lt;span class="nt">-center&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-flex&lt;/span> &lt;span class="na">xs11&lt;/span> &lt;span class="na">style&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;overflow-wrap: break-word;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">{{&lt;/span> &lt;span class="nx">todo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">text&lt;/span> &lt;span class="p">}}&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/v-flex&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-flex&lt;/span> &lt;span class="na">xs1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">style&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text-align: right;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-checkbox&lt;/span>
&lt;span class="nt">v-model&lt;/span>&lt;span class="s">=&amp;#34;todo.done&amp;#34;
&lt;/span>&lt;span class="s"> hide-details
&lt;/span>&lt;span class="s"> class=&amp;#34;pa-0 ma-0&amp;#34;
&lt;/span>&lt;span class="s"> style=&amp;#34;display: inline-block;&amp;#34;
&lt;/span>&lt;span class="s"> color=&amp;#34;green lighten-1&amp;#34;
&lt;/span>&lt;span class="s"> /&amp;gt;
&lt;/span>&lt;span class="s"> &amp;lt;/div&amp;gt;
&lt;/span>&lt;span class="s"> &amp;lt;/v-flex&amp;gt;
&lt;/span>&lt;span class="s"> &amp;lt;/v-layout&amp;gt;
&lt;/span>&lt;span class="s"> &amp;lt;/v-card-text&amp;gt;
&lt;/span>&lt;span class="s"> &amp;lt;v-card-actions&amp;gt;
&lt;/span>&lt;span class="s"> &amp;lt;span class=&amp;#34;grey--text&amp;#34;&amp;gt;
&lt;/span>&lt;span class="s"> Выполнить до &amp;lt;v-icon small&amp;gt;event&amp;lt;/v-icon&amp;gt; {{ todo.dueDate }} | Создано
&lt;/span>&lt;span class="s"> &amp;lt;v-icon small&amp;gt;calendar_today&amp;lt;/v-icon&amp;gt; {{ todo.createdDate }}
&lt;/span>&lt;span class="s"> &amp;lt;/span&amp;gt;
&lt;/span>&lt;span class="s"> &amp;lt;v-spacer /&amp;gt;
&lt;/span>&lt;span class="s"> &amp;lt;span class=&amp;#34;grey--text&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-icon&lt;/span> &lt;span class="na">small&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">category&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/v-icon&amp;gt;Категория: {{ todo.category }}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/v-card-actions&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/v-card&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;TodoItem&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">props&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">todo&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nb">Object&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="k">default&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">({})&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;/section>
&lt;/details>
&lt;p>И наконец вставим новые компоненты в &lt;code>index.vue&lt;/code>, и добавим в него немного рыбы:&lt;/p>
&lt;details>
&lt;summary>&lt;strong>index.vue&lt;/strong>&lt;/summary>
&lt;section>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-vue" data-lang="vue">&lt;span class="c">&amp;lt;!--&lt;/span> &lt;span class="nx">frontend&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nx">pages&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nx">index&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">vue&lt;/span> &lt;span class="o">--&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-layout&lt;/span> &lt;span class="na">row&lt;/span> &lt;span class="na">wrap&lt;/span> &lt;span class="na">justify&lt;/span>&lt;span class="nt">-center&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-flex&lt;/span> &lt;span class="na">xs8&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;pb-1&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">new-todo-form&lt;/span> &lt;span class="nt">@add&lt;/span>&lt;span class="s">=&amp;#34;addTodo&amp;#34;&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/v-flex&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-flex&lt;/span> &lt;span class="nt">v-for&lt;/span>&lt;span class="s">=&amp;#34;todo of todoList&amp;#34; :key=&amp;#34;todo.id&amp;#34; xs8 class=&amp;#34;my-1&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">todo-item&lt;/span> &lt;span class="nt">:todo&lt;/span>&lt;span class="s">=&amp;#34;todo&amp;#34;&lt;/span> &lt;span class="nt">@delete&lt;/span>&lt;span class="s">=&amp;#34;deleteTodo&amp;#34;&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/v-flex&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/v-layout&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">NewTodoForm&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;../components/NewTodoForm&amp;#39;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">TodoItem&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;../components/TodoItem&amp;#39;&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">components&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">TodoItem&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">NewTodoForm&lt;/span> &lt;span class="p">},&lt;/span>
&lt;span class="nx">data&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">todoList&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nx">id&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">title&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;TODO 1&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">text&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="s1">&amp;#39;Lorem ipsum dolor sit amet, consectetur adipiscing elit&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">dueDate&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;2020-10-16&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">createdDate&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;2020-03-09&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">done&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">category&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;Работа&amp;#39;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nx">id&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">title&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;TODO 2&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">text&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="s1">&amp;#39;Lorem ipsum dolor sit amet, consectetur adipiscing elit&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">dueDate&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;2020-10-16&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">createdDate&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;2020-03-09&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">done&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">category&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;Работа&amp;#39;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nx">id&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">title&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;TODO 3&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">text&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="s1">&amp;#39;Lorem ipsum dolor sit amet, consectetur adipiscing elit&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">dueDate&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;2020-10-16&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">createdDate&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;2020-03-09&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">done&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">category&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;Работа&amp;#39;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nx">id&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">title&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;TODO 4&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">text&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="s1">&amp;#39;Lorem ipsum dolor sit amet, consectetur adipiscing elit&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">dueDate&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;2020-10-16&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">createdDate&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;2020-03-09&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">done&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">category&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;Работа&amp;#39;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nx">id&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">title&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;TODO 5&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">text&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="s1">&amp;#39;Lorem ipsum dolor sit amet, consectetur adipiscing elit&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">dueDate&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;2020-10-16&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">createdDate&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;2020-03-09&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">done&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">category&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;Работа&amp;#39;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span>
&lt;span class="nx">id&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">title&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;TODO 6&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">text&lt;/span>&lt;span class="o">:&lt;/span>
&lt;span class="s1">&amp;#39;Lorem ipsum dolor sit amet, consectetur adipiscing elit&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">dueDate&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;2020-10-16&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">createdDate&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;2020-03-09&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">done&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">category&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;Работа&amp;#39;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nx">methods&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">addTodo&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">newTodo&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">todoList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span>
&lt;span class="o">?&lt;/span> &lt;span class="nb">Math&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">max&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">apply&lt;/span>&lt;span class="p">(&lt;/span>
&lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">todoList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">item&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">item&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="o">:&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">todoList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">unshift&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nx">id&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">createdDate&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nb">Date&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="nx">toISOString&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="nx">substr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="nx">done&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">...&lt;/span>&lt;span class="nx">newTodo&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nx">deleteTodo&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">todoId&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">todoList&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">todoList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">filter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">item&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">item&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">id&lt;/span> &lt;span class="o">!==&lt;/span> &lt;span class="nx">todoId&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;/section>
&lt;/details>
&lt;p>После проделанной работы рекомендую проверить работоспособность получившегося макета. Запустите &lt;code>dev&lt;/code> сервер и перейдите на http://localhost:3000/, там вы должны увидеть следующую картину:&lt;/p>
&lt;details>
&lt;summary>&lt;strong>Функциональный макет&lt;/strong>&lt;/summary>
&lt;section>
&lt;figure
class="gallery-image"
style="
flex-grow: 151;
flex-basis: 363px"
>
&lt;a href="https://ingvarlistard.github.io/p/nuxt-django-graphql/gsg0plu-vg6tllgm1gvgfcot9oi.png" data-size="869x573">
&lt;img src="https://ingvarlistard.github.io/p/nuxt-django-graphql/gsg0plu-vg6tllgm1gvgfcot9oi.png"
width="869"
height="573"
srcset="https://ingvarlistard.github.io/p/nuxt-django-graphql/gsg0plu-vg6tllgm1gvgfcot9oi_hue6396bee632e15b15340367c187bc3d3_54914_480x0_resize_box_3.png 480w, https://ingvarlistard.github.io/p/nuxt-django-graphql/gsg0plu-vg6tllgm1gvgfcot9oi_hue6396bee632e15b15340367c187bc3d3_54914_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="Nuxt &amp;#43; Vuetify">
&lt;/a>
&lt;figcaption>Nuxt + Vuetify&lt;/figcaption>
&lt;/figure>
&lt;/section>
&lt;/details>
&lt;h2 id="объединение-фронтенда-и-бэкенда">Объединение фронтенда и бэкенда&lt;/h2>
&lt;h3 id="настройка-csrf-защиты-django--apollo">Настройка CSRF-защиты Django + Apollo&lt;/h3>
&lt;p>В Django по-умолчанию используется &lt;a class="link" href="https://ru.wikipedia.org/wiki/%d0%9c%d0%b5%d0%b6%d1%81%d0%b0%d0%b9%d1%82%d0%be%d0%b2%d0%b0%d1%8f_%d0%bf%d0%be%d0%b4%d0%b4%d0%b5%d0%bb%d0%ba%d0%b0_%d0%b7%d0%b0%d0%bf%d1%80%d0%be%d1%81%d0%b0" target="_blank" rel="noopener"
>CSRF&lt;/a> защита.&lt;/p>
&lt;p>Эта защита реализуется при помощи &lt;a class="link" href="https://djbook.ru/rel1.7/topics/http/middleware.html" target="_blank" rel="noopener"
>промежуточного слоя&lt;/a> (middleware) — &lt;code>CsrfViewMiddleware&lt;/code>. Посмотреть на него вы можете в файле &lt;code>settings.py&lt;/code> в переменной &lt;code>MIDDLEWARE&lt;/code>.&lt;/p>
&lt;p>Принцип его работы очень прост: у любого POST-запроса к Django в заголовках должен иметься CSRF-токен. Если этот токен отсутствует, то сервер просто отклоняет этот запрос.&lt;/p>
&lt;p>CSRF-токен в классическом django приложении приходит вместе с любым GET-запросом, после чего при необходимости добавляется в формы при рендеринге шаблона.&lt;/p>
&lt;p>В нашем случае проблема в том, что вне зависимости от того, выполняется в Apollo мутация или запрос, метод их по-умолчанию всегда будет POST. Apollo позволяет изменить это поведение таким образом, чтобы для &lt;code>Query&lt;/code> метод запроса был GET, а для &lt;code>Mutation&lt;/code> — POST, но насколько я знаю, graphene на данный момент не поддерживает подобный режим работы.&lt;/p>
&lt;p>Я поступил следующим образом: немного расширил логику стандартного &lt;code>CsrfViewMiddleware&lt;/code> таким образом, чтобы он проверял тип GraphQL запроса, и уже на основе этого принимал или сбрасывал соединение.&lt;/p>
&lt;p>Для этого добавим кастомную проверку CSRF, например, в уже знакомый нам файл &lt;code>api.py&lt;/code>&lt;/p>
&lt;details>
&lt;summary>&lt;strong>api.py&lt;/strong>&lt;/summary>
&lt;section>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="c1"># backend/backend/api.py&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">json&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="nn">graphene&lt;/span>
&lt;span class="kn">from&lt;/span> &lt;span class="nn">django.middleware.csrf&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">CsrfViewMiddleware&lt;/span>
&lt;span class="kn">from&lt;/span> &lt;span class="nn">backend.todo_list.schema&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Query&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Mutation&lt;/span>
&lt;span class="n">schema&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">graphene&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Schema&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">query&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">Query&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">mutation&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">Mutation&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">CustomCsrfMiddleware&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CsrfViewMiddleware&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">process_view&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">callback&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">callback_args&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">callback_kwargs&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nb">getattr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;csrf_processing_done&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">False&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="kc">None&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nb">getattr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">callback&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;csrf_exempt&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">False&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="kc">None&lt;/span>
&lt;span class="k">try&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">body&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">request&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">body&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">decode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;utf-8&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">body&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">json&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">loads&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">body&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># в любой непонятной ситуации передаём запрос оригинальному CsrfViewMiddleware&lt;/span>
&lt;span class="k">except&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="ne">TypeError&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ne">ValueError&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ne">UnicodeDecodeError&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nb">super&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CustomCsrfMiddleware&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">process_view&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">callback&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">callback_args&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">callback_kwargs&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1"># проверка на list, т.к. клиент может отправлять &amp;#34;батченные&amp;#34; запросы&lt;/span>
&lt;span class="c1"># https://blog.apollographql.com/batching-client-graphql-queries-a685f5bcd41b&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nb">isinstance&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">body&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">list&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">query&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">body&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="c1"># если внутри есть хотя бы одна мутация, то отправляем запрос&lt;/span>
&lt;span class="c1"># к оригинальному CsrfViewMiddleware&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="s1">&amp;#39;mutation&amp;#39;&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">query&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">break&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_accept&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="c1"># принимаем любые query без проверки на csrf&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="s1">&amp;#39;query&amp;#39;&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">body&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="s1">&amp;#39;mutation&amp;#39;&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">body&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_accept&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nb">super&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CustomCsrfMiddleware&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">process_view&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">request&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">callback&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">callback_args&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">callback_kwargs&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;/section>
&lt;/details>
&lt;p>Далее, в файле &lt;code>settings.py&lt;/code> нужно заменить &amp;ldquo;оригинальный&amp;rdquo; &lt;code>CsrfViewMiddleware&lt;/code>, на кастомный:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="c1"># settings.py&lt;/span>
&lt;span class="n">MIDDLEWARE&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="o">...&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s1">&amp;#39;backend.backend.api.CustomCsrfMiddleware&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="c1"># &amp;#39;django.middleware.csrf.CsrfViewMiddleware&amp;#39;,&lt;/span>
&lt;span class="o">...&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Если уважаемый читатель знает более надежные и правильные способы CSRF-защиты в связке Django + Nuxt + Apollo, то призываю поделиться своим знанием в комментариях.&lt;/p>
&lt;h3 id="django-cors-headers">Django CORS Headers&lt;/h3>
&lt;p>Т.к. dev сервера бэкенда и фронтента у нас стоят на разных портах, то Django нужно оповестить, с каких хостов могут совершаться запросы, и какие заголовки ему разрешено обрабатывать. А поможет нам в этом библиотека &lt;code>django-cors-headers&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">pipenv install &lt;span class="s2">&amp;#34;django-cors-headers&amp;gt;=3.2&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>В &lt;code>settings.py&lt;/code> добавим:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="c1"># backend/backend/settings.py&lt;/span>
&lt;span class="kn">from&lt;/span> &lt;span class="nn">corsheaders.defaults&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">default_headers&lt;/span>
&lt;span class="n">INSTALLED_APPS&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="o">...&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s1">&amp;#39;graphene_django&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s1">&amp;#39;backend.todo_list&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s1">&amp;#39;corsheaders&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1"># вот эту строку&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="n">CORS_ALLOW_CREDENTIALS&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">True&lt;/span>
&lt;span class="n">CORS_ALLOW_HEADERS&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">default_headers&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;cache-control&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;cookies&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">CORS_ORIGIN_ALLOW_ALL&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">True&lt;/span> &lt;span class="c1"># не рекомендуется для production&lt;/span>
&lt;span class="c1"># А также парочку middleware&lt;/span>
&lt;span class="n">MIDDLEWARE&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="o">...&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s1">&amp;#39;corsheaders.middleware.CorsMiddleware&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s1">&amp;#39;django.middleware.common.CommonMiddleware&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="o">...&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="установка-и-настройка-apollo">Установка и настройка Apollo&lt;/h3>
&lt;p>Для Nuxt существует собственный модуль &lt;code>apollo&lt;/code>, который в свою очередь основан на библиотеке &lt;code>vue-apollo&lt;/code> (которая в свою очередь основана на Apollo). Для его установки введите:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">npm install --save @nuxtjs/apollo graphql-tag cookie-universal-nuxt
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Также при конфигурации &lt;code>Apollo&lt;/code> нам понадобится небольшая библиотека &lt;code>cookie-universal-nuxt&lt;/code> для манипуляции куками при рендере на стороне сервера.
Добавим эти модули в &lt;code>nuxt.config.js&lt;/code>. В зависимости от вашей изначальной конфигурации там уже может быть несоклько модулей. Как минимум там должен быть &lt;code>vuetify&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="c1">// nuxt.config.js
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="p">...,&lt;/span>
&lt;span class="nx">modules&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="p">...,&lt;/span>
&lt;span class="s1">&amp;#39;@nuxtjs/vuetify&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s1">&amp;#39;@nuxtjs/apollo&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s1">&amp;#39;cookie-universal-nuxt&amp;#39;&lt;/span>
&lt;span class="p">],&lt;/span>
&lt;span class="nx">apollo&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">clientConfigs&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">default&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;~/plugins/apollo-client.js&amp;#39;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="p">...&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Настройка Apollo дело невсегда тривиальное. Постараемся обойтись минимальной конфигурацией. Создадим файл по указанному выше пути:&lt;/p>
&lt;p>Конфигурируем клиент &lt;code>Apollo&lt;/code>, а вместе с тем формируем цепочку обработчиков запросов.&lt;/p>
&lt;details>
&lt;summary>&lt;strong>apollo-client.js&lt;/strong>&lt;/summary>
&lt;section>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="c1">// frontend/plugins/apollo-client.js
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">HttpLink&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;apollo-link-http&amp;#39;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">setContext&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;apollo-link-context&amp;#39;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">from&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">concat&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;apollo-link&amp;#39;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">InMemoryCache&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;apollo-cache-inmemory&amp;#39;&lt;/span>
&lt;span class="c1">// Если плагин является функцией, то в процессе инициализации Nuxt передаёт в неё контекст ctx
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="nx">ctx&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="cm">/**
&lt;/span>&lt;span class="cm"> * По-умолчанию при рендере со стороны сервера заголовки
&lt;/span>&lt;span class="cm"> * в запросе к бэкенду не отправляются, так что &amp;#34;пробрасываем&amp;#34;
&lt;/span>&lt;span class="cm"> * заголовки от клиента.
&lt;/span>&lt;span class="cm"> */&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">ssrMiddleware&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">setContext&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">headers&lt;/span> &lt;span class="p">})&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">client&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="nx">headers&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">headers&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="p">...&lt;/span>&lt;span class="nx">headers&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">connection&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">ctx&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">app&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">req&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">headers&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">connection&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">referer&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">ctx&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">app&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">req&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">headers&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">referer&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">cookie&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">ctx&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">app&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">req&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">headers&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">cookie&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="cm">/**
&lt;/span>&lt;span class="cm"> * Добавление CSRF-токена к запросу.
&lt;/span>&lt;span class="cm"> * https://docs.djangoproject.com/en/2.2/ref/csrf/#ajax
&lt;/span>&lt;span class="cm"> */&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">csrfMiddleware&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">setContext&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">headers&lt;/span> &lt;span class="p">})&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">headers&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="p">...&lt;/span>&lt;span class="nx">headers&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s1">&amp;#39;X-CSRFToken&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">ctx&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">app&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">$cookies&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;csrftoken&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="kc">null&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">httpLink&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">HttpLink&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nx">uri&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;http://localhost:8000/graphql/&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">credentials&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;include&amp;#39;&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="c1">// Middleware в Apollo это примерно тоже самое что и middleware в Django,
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// только на стороне клиента. Объединяем их в цепочку. Последовательность важна.
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">link&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">from&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="nx">csrfMiddleware&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">ssrMiddleware&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">httpLink&lt;/span>&lt;span class="p">])&lt;/span>
&lt;span class="c1">// Инициализируем кэш. При должном усердии он может заменить Vuex,
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// но об этом как-нибудь в другой раз
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">cache&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">InMemoryCache&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">link&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">cache&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="c1">// без отключения стандартного apollo-module HttpLink&amp;#39;a в консоль сыпятся варнинги
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">defaultHttpLink&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">false&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;/section>
&lt;/details>
&lt;p>На этом этапе лучше еще раз удостовериться, что Nuxt собирается без ошибок, запустив dev сервер.&lt;/p>
&lt;h3 id="оживляем-приложение">Оживляем приложение&lt;/h3>
&lt;p>И вот наконец настало время соединить фронт и бэк.&lt;/p>
&lt;p>Для начала где-нибудь создадим файл, в котором будут храниться все запросы и мутации к бэкенду. В моем случае этот файл расположился по пути &lt;code>frontend/graphql.js&lt;/code> с уже знакомым нам содержимым:&lt;/p>
&lt;details>
&lt;summary>&lt;strong>graphql.js&lt;/strong>&lt;/summary>
&lt;section>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">import&lt;/span> &lt;span class="nx">gql&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;graphql-tag&amp;#39;&lt;/span>
&lt;span class="c1">// т.к. внутренности записи Todo используются практически во всех запросах,
&lt;/span>&lt;span class="c1">// то резонно вынести их в отдельный фрагмент
&lt;/span>&lt;span class="c1">// https://www.apollographql.com/docs/react/data/fragments/
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">TODO_FRAGMENT&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">gql&lt;/span>&lt;span class="sb">`
&lt;/span>&lt;span class="sb"> fragment TodoContents on TodoNode {
&lt;/span>&lt;span class="sb"> id
&lt;/span>&lt;span class="sb"> title
&lt;/span>&lt;span class="sb"> text
&lt;/span>&lt;span class="sb"> done
&lt;/span>&lt;span class="sb"> createdDate
&lt;/span>&lt;span class="sb"> dueDate
&lt;/span>&lt;span class="sb"> category {
&lt;/span>&lt;span class="sb"> id
&lt;/span>&lt;span class="sb"> name
&lt;/span>&lt;span class="sb"> }
&lt;/span>&lt;span class="sb"> }
&lt;/span>&lt;span class="sb">`&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">ADD_TODO&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">gql&lt;/span>&lt;span class="sb">`
&lt;/span>&lt;span class="sb"> mutation(
&lt;/span>&lt;span class="sb"> $title: String!
&lt;/span>&lt;span class="sb"> $text: String
&lt;/span>&lt;span class="sb"> $dueDate: Date!
&lt;/span>&lt;span class="sb"> $category: String!
&lt;/span>&lt;span class="sb"> ) {
&lt;/span>&lt;span class="sb"> addTodo(
&lt;/span>&lt;span class="sb"> title: $title
&lt;/span>&lt;span class="sb"> text: $text
&lt;/span>&lt;span class="sb"> dueDate: $dueDate
&lt;/span>&lt;span class="sb"> category: $category
&lt;/span>&lt;span class="sb"> ) {
&lt;/span>&lt;span class="sb"> ...TodoContents
&lt;/span>&lt;span class="sb"> }
&lt;/span>&lt;span class="sb"> }
&lt;/span>&lt;span class="sb"> &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">TODO_FRAGMENT&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">
&lt;/span>&lt;span class="sb">`&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">TOGGLE_TODO&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">gql&lt;/span>&lt;span class="sb">`
&lt;/span>&lt;span class="sb"> mutation($todoId: ID) {
&lt;/span>&lt;span class="sb"> toggleTodo(todoId: $todoId) {
&lt;/span>&lt;span class="sb"> ...TodoContents
&lt;/span>&lt;span class="sb"> }
&lt;/span>&lt;span class="sb"> }
&lt;/span>&lt;span class="sb"> &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">TODO_FRAGMENT&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">
&lt;/span>&lt;span class="sb">`&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">GET_CATEGORIES&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">gql&lt;/span>&lt;span class="sb">`
&lt;/span>&lt;span class="sb"> {
&lt;/span>&lt;span class="sb"> categories {
&lt;/span>&lt;span class="sb"> id
&lt;/span>&lt;span class="sb"> name
&lt;/span>&lt;span class="sb"> }
&lt;/span>&lt;span class="sb"> }
&lt;/span>&lt;span class="sb">`&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">GET_TODO_LIST&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">gql&lt;/span>&lt;span class="sb">`
&lt;/span>&lt;span class="sb"> {
&lt;/span>&lt;span class="sb"> todoList {
&lt;/span>&lt;span class="sb"> ...TodoContents
&lt;/span>&lt;span class="sb"> }
&lt;/span>&lt;span class="sb"> }
&lt;/span>&lt;span class="sb"> &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">TODO_FRAGMENT&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">
&lt;/span>&lt;span class="sb">`&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">REMOVE_TODO&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">gql&lt;/span>&lt;span class="sb">`
&lt;/span>&lt;span class="sb"> mutation($todoId: ID) {
&lt;/span>&lt;span class="sb"> removeTodo(todoId: $todoId)
&lt;/span>&lt;span class="sb"> }
&lt;/span>&lt;span class="sb">`&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">ADD_TODO&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">TOGGLE_TODO&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">GET_CATEGORIES&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">GET_TODO_LIST&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">REMOVE_TODO&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;/section>
&lt;/details>
&lt;p>Теперь нужно немного изменить уже существующий функционал фронтенда. Наконец пришло время добавить туда взаимодействие с бэкендом.&lt;/p>
&lt;p>Изменим Vue компоненты:&lt;/p>
&lt;details>
&lt;summary>&lt;strong>index.vue&lt;/strong>&lt;/summary>
&lt;section>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-vue" data-lang="vue">&lt;span class="c">&amp;lt;!--&lt;/span> &lt;span class="nx">frontend&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nx">pages&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nx">index&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">vue&lt;/span> &lt;span class="o">--&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-layout&lt;/span> &lt;span class="na">row&lt;/span> &lt;span class="na">wrap&lt;/span> &lt;span class="na">justify&lt;/span>&lt;span class="nt">-center&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-flex&lt;/span> &lt;span class="na">xs8&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;pb-1&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--&lt;/span> &lt;span class="nx">emit&lt;/span>&lt;span class="s1">&amp;#39;ы теперь нам не нужны --&amp;gt;
&lt;/span>&lt;span class="s1"> &amp;lt;new-todo-form /&amp;gt;
&lt;/span>&lt;span class="s1"> &amp;lt;/v-flex&amp;gt;
&lt;/span>&lt;span class="s1"> &amp;lt;v-flex v-for=&amp;#34;todo of todoList&amp;#34; :key=&amp;#34;todo.id&amp;#34; xs8 class=&amp;#34;my-1&amp;#34;&amp;gt;
&lt;/span>&lt;span class="s1"> &amp;lt;todo-item :todo=&amp;#34;todo&amp;#34; /&amp;gt;
&lt;/span>&lt;span class="s1"> &amp;lt;/v-flex&amp;gt;
&lt;/span>&lt;span class="s1"> &amp;lt;/v-layout&amp;gt;
&lt;/span>&lt;span class="s1">&amp;lt;/template&amp;gt;
&lt;/span>&lt;span class="s1">
&lt;/span>&lt;span class="s1">&amp;lt;script&amp;gt;
&lt;/span>&lt;span class="s1">import NewTodoForm from &amp;#39;&lt;/span>&lt;span class="p">..&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nx">components&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nx">NewTodoForm&lt;/span>&lt;span class="s1">&amp;#39;
&lt;/span>&lt;span class="s1">import TodoItem from &amp;#39;&lt;/span>&lt;span class="p">..&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nx">components&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nx">TodoItem&lt;/span>&lt;span class="s1">&amp;#39;
&lt;/span>&lt;span class="s1">// импортируем свеженаписанные запросы
&lt;/span>&lt;span class="s1">import { GET_TODO_LIST } from &amp;#39;&lt;/span>&lt;span class="p">..&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nx">graphql&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">components&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">TodoItem&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">NewTodoForm&lt;/span> &lt;span class="p">},&lt;/span>
&lt;span class="nx">data&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">todoList&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nx">apollo&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// получаем список todoList. При таком объявлении запроса переменная todoList
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// должна записаться результатами запроса, однако запрос должен называться
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// аналогично с переменной
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">todoList&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">query&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">GET_TODO_LIST&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;/section>
&lt;/details>
&lt;details>
&lt;summary>&lt;strong>NewTodoForm.vue&lt;/strong>&lt;/summary>
&lt;section>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-vue" data-lang="vue">&lt;span class="c">&amp;lt;!--&lt;/span> &lt;span class="nx">frontend&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nx">components&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nx">NewTodoForm&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">vue&lt;/span> &lt;span class="o">--&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-card&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-card-title&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;pb-1&amp;#34;&lt;/span> &lt;span class="na">style&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;overflow-wrap: break-word;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">b&lt;/span>&lt;span class="p">&amp;gt;{{&lt;/span> &lt;span class="nx">todo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">title&lt;/span> &lt;span class="p">}}&amp;lt;/&lt;/span>&lt;span class="nt">b&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-spacer&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--&lt;/span> &lt;span class="nx">Изменено&lt;/span> &lt;span class="nx">событие&lt;/span> &lt;span class="o">--&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-btn&lt;/span>
&lt;span class="nt">@click&lt;/span>&lt;span class="s">=&amp;#34;remove&amp;#34;&lt;/span>
&lt;span class="na">flat&lt;/span>
&lt;span class="na">small&lt;/span>
&lt;span class="na">icon&lt;/span>
&lt;span class="na">style&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;position: absolute; right: 0; top: 0&amp;#34;&lt;/span>
&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-icon&lt;/span> &lt;span class="nt">:disabled&lt;/span>&lt;span class="s">=&amp;#34;$nuxt.isServer&amp;#34;&lt;/span> &lt;span class="na">small&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">close&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/v-icon&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/v-btn&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/v-card-title&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-card-text&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;py-1&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-layout&lt;/span> &lt;span class="na">row&lt;/span> &lt;span class="na">justyfy&lt;/span>&lt;span class="nt">-center&lt;/span> &lt;span class="na">align&lt;/span>&lt;span class="nt">-center&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-flex&lt;/span> &lt;span class="na">xs11&lt;/span> &lt;span class="na">style&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;overflow-wrap: break-word;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">{{&lt;/span> &lt;span class="nx">todo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">text&lt;/span> &lt;span class="p">}}&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/v-flex&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-flex&lt;/span> &lt;span class="na">xs1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">style&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text-align: right;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--&lt;/span> &lt;span class="nx">Добавлена&lt;/span> &lt;span class="nx">обработка&lt;/span> &lt;span class="nx">клика&lt;/span> &lt;span class="o">--&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-checkbox&lt;/span>
&lt;span class="nt">:value&lt;/span>&lt;span class="s">=&amp;#34;todo.done&amp;#34;&lt;/span>
&lt;span class="nt">@click.once&lt;/span>&lt;span class="s">=&amp;#34;toggle&amp;#34;&lt;/span>
&lt;span class="na">hide&lt;/span>&lt;span class="nt">-details&lt;/span>
&lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;pa-0 ma-0&amp;#34;&lt;/span>
&lt;span class="na">style&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;display: inline-block;&amp;#34;&lt;/span>
&lt;span class="na">color&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;green lighten-1&amp;#34;&lt;/span>
&lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/v-flex&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/v-layout&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/v-card-text&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-card-actions&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">span&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;grey--text&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="nx">Выполнить&lt;/span> &lt;span class="nx">до&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-icon&lt;/span> &lt;span class="na">small&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">event&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/v-icon&amp;gt; {{ todo.dueDate }} | Создано&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-icon&lt;/span> &lt;span class="na">small&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">calendar_today&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/v-icon&amp;gt; {{ todo.createdDate }}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-spacer&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">span&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;grey--text&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--&lt;/span> &lt;span class="nx">Изменен&lt;/span> &lt;span class="nx">путь&lt;/span> &lt;span class="nx">получения&lt;/span> &lt;span class="nx">имени&lt;/span> &lt;span class="nx">категории&lt;/span> &lt;span class="o">--&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-icon&lt;/span> &lt;span class="na">small&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">category&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/v-icon&amp;gt;Категория: {{ todo.category.name }}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/v-card-actions&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/v-card&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="c1">// импортируем свеженаписанные запросы
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">GET_TODO_LIST&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">REMOVE_TODO&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">TOGGLE_TODO&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;../graphql&amp;#39;&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;TodoItem&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">props&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">todo&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nb">Object&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="k">default&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">({})&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="c1">// с этого момента изменения по-серьезнее
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">methods&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">toggle&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// Для запроса который возвращает измененный элемент не обязательно
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// вручную прописывать функцию update. Apollo сам найдёт в каких
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// запросах &amp;#34;участвует&amp;#34; измененная запись, и разошлет всем подписчикам
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// измененный объект. В нашем случае это запрос в компоненте index.vue
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// на получение списка Todo
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">$apollo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">mutate&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nx">mutation&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">TOGGLE_TODO&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">variables&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">todoId&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">todo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">id&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nx">remove&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// функция update не видит контекста this
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">todoId&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">todo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">id&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">$apollo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">mutate&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nx">mutation&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">REMOVE_TODO&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">variables&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">todoId&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nx">update&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">store&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">data&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">removeTodo&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="p">})&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="nx">removeTodo&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">return&lt;/span>
&lt;span class="c1">// В случае успешного удаления удаляем текущий элемент из кэша
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">store&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">readQuery&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="nx">query&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">GET_TODO_LIST&lt;/span> &lt;span class="p">})&lt;/span>
&lt;span class="nx">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">todoList&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">todoList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">filter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">todo&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">todo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">id&lt;/span> &lt;span class="o">!==&lt;/span> &lt;span class="nx">todoId&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">// Самоуничтожаемся!
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">store&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">writeQuery&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="nx">query&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">GET_TODO_LIST&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">data&lt;/span> &lt;span class="p">})&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;/section>
&lt;/details>
&lt;details>
&lt;summary>&lt;strong>TodoItem.vue&lt;/strong>&lt;/summary>
&lt;section>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-vue" data-lang="vue">&lt;span class="c">&amp;lt;!--&lt;/span> &lt;span class="nx">frontend&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nx">components&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nx">TodoItem&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">vue&lt;/span> &lt;span class="o">--&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-card&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-card-title&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;pb-1&amp;#34;&lt;/span> &lt;span class="na">style&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;overflow-wrap: break-word;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">b&lt;/span>&lt;span class="p">&amp;gt;{{&lt;/span> &lt;span class="nx">todo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">title&lt;/span> &lt;span class="p">}}&amp;lt;/&lt;/span>&lt;span class="nt">b&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-spacer&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--&lt;/span> &lt;span class="nx">Изменено&lt;/span> &lt;span class="nx">событие&lt;/span> &lt;span class="o">--&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-btn&lt;/span>
&lt;span class="nt">@click&lt;/span>&lt;span class="s">=&amp;#34;remove&amp;#34;&lt;/span>
&lt;span class="na">flat&lt;/span>
&lt;span class="na">small&lt;/span>
&lt;span class="na">icon&lt;/span>
&lt;span class="na">style&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;position: absolute; right: 0; top: 0&amp;#34;&lt;/span>
&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-icon&lt;/span> &lt;span class="nt">:disabled&lt;/span>&lt;span class="s">=&amp;#34;$nuxt.isServer&amp;#34;&lt;/span> &lt;span class="na">small&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">close&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/v-icon&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/v-btn&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/v-card-title&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-card-text&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;py-1&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-layout&lt;/span> &lt;span class="na">row&lt;/span> &lt;span class="na">justyfy&lt;/span>&lt;span class="nt">-center&lt;/span> &lt;span class="na">align&lt;/span>&lt;span class="nt">-center&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-flex&lt;/span> &lt;span class="na">xs11&lt;/span> &lt;span class="na">style&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;overflow-wrap: break-word;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">{{&lt;/span> &lt;span class="nx">todo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">text&lt;/span> &lt;span class="p">}}&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/v-flex&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-flex&lt;/span> &lt;span class="na">xs1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">style&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text-align: right;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--&lt;/span> &lt;span class="nx">Добавлена&lt;/span> &lt;span class="nx">обработка&lt;/span> &lt;span class="nx">клика&lt;/span> &lt;span class="o">--&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-checkbox&lt;/span>
&lt;span class="nt">:value&lt;/span>&lt;span class="s">=&amp;#34;todo.done&amp;#34;&lt;/span>
&lt;span class="nt">@click.once&lt;/span>&lt;span class="s">=&amp;#34;toggle&amp;#34;&lt;/span>
&lt;span class="na">hide&lt;/span>&lt;span class="nt">-details&lt;/span>
&lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;pa-0 ma-0&amp;#34;&lt;/span>
&lt;span class="na">style&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;display: inline-block;&amp;#34;&lt;/span>
&lt;span class="na">color&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;green lighten-1&amp;#34;&lt;/span>
&lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/v-flex&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/v-layout&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/v-card-text&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-card-actions&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">span&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;grey--text&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="nx">Выполнить&lt;/span> &lt;span class="nx">до&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-icon&lt;/span> &lt;span class="na">small&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">event&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/v-icon&amp;gt; {{ todo.dueDate }} | Создано&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-icon&lt;/span> &lt;span class="na">small&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">calendar_today&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/v-icon&amp;gt; {{ todo.createdDate }}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-spacer&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">span&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;grey--text&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="c">&amp;lt;!--&lt;/span> &lt;span class="nx">Изменен&lt;/span> &lt;span class="nx">путь&lt;/span> &lt;span class="nx">получения&lt;/span> &lt;span class="nx">имени&lt;/span> &lt;span class="nx">категории&lt;/span> &lt;span class="o">--&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">v-icon&lt;/span> &lt;span class="na">small&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="nx">category&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/v-icon&amp;gt;Категория: {{ todo.category.name }}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/v-card-actions&amp;gt;&lt;/span>
&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/v-card&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="c1">// импортируем свеженаписанные запросы
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">GET_TODO_LIST&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">REMOVE_TODO&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">TOGGLE_TODO&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;../graphql&amp;#39;&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;TodoItem&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">props&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">todo&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nb">Object&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="k">default&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">({})&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="c1">// с этого момента изменения по-серьезнее
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">methods&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">toggle&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// Для запроса который возвращает измененный элемент не обязательно
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// вручную прописывать функцию update. Apollo сам найдёт в каких
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// запросах &amp;#34;участвует&amp;#34; измененная запись, и разошлет всем подписчикам
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// измененный объект. В нашем случае это запрос в компоненте index.vue
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="c1">// на получение списка Todo
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">$apollo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">mutate&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nx">mutation&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">TOGGLE_TODO&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">variables&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">todoId&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">todo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">id&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nx">remove&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// функция update не видит контекста this
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">todoId&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">todo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">id&lt;/span>
&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">$apollo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">mutate&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nx">mutation&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">REMOVE_TODO&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">variables&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">todoId&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nx">update&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">store&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">data&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">removeTodo&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="p">})&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="nx">removeTodo&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">return&lt;/span>
&lt;span class="c1">// В случае успешного удаления удаляем текущий элемент из кэша
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">store&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">readQuery&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="nx">query&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">GET_TODO_LIST&lt;/span> &lt;span class="p">})&lt;/span>
&lt;span class="nx">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">todoList&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">todoList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">filter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">todo&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">todo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">id&lt;/span> &lt;span class="o">!==&lt;/span> &lt;span class="nx">todoId&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c1">// Самоуничтожаемся!
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">store&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">writeQuery&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="nx">query&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">GET_TODO_LIST&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">data&lt;/span> &lt;span class="p">})&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>
&lt;/section>
&lt;/details>
&lt;p>Проверим, что у нас получилось&lt;/p>
&lt;details>
&lt;summary>&lt;strong>Результат&lt;/strong>&lt;/summary>
&lt;section>
&lt;figure
class="gallery-image"
style="
flex-grow: 203;
flex-basis: 487px"
>
&lt;a href="https://ingvarlistard.github.io/p/nuxt-django-graphql/xy3e_-efabaavt-hjfy68fb_ftw.gif" data-size="918x452">
&lt;img src="https://ingvarlistard.github.io/p/nuxt-django-graphql/xy3e_-efabaavt-hjfy68fb_ftw.gif"
width="918"
height="452"
srcset="https://ingvarlistard.github.io/p/nuxt-django-graphql/xy3e_-efabaavt-hjfy68fb_ftw_hu1054838543e688952e9935adee432a9a_235906_480x0_resize_box.gif 480w, https://ingvarlistard.github.io/p/nuxt-django-graphql/xy3e_-efabaavt-hjfy68fb_ftw_hu1054838543e688952e9935adee432a9a_235906_1024x0_resize_box.gif 1024w"
loading="lazy"
>
&lt;/a>
&lt;/figure>
&lt;/section>
&lt;/details>
&lt;h2 id="заключение">Заключение&lt;/h2>
&lt;p>В этой статье я попытался рассказать как построить взаимодействие между Django и Nuxt с помощью GraphQL API, показать решение проблем с которыми довелось столкнуться мне. Надеюсь это подтолкнет энтузиастов попробовать что-то новое, и сэкономит время в решении проблем.&lt;/p>
&lt;p>Весь код доступен на &lt;a class="link" href="https://github.com/IngvarListard/nuxt-django-graphql-example" target="_blank" rel="noopener"
>GitHub&lt;/a>.&lt;/p></description></item></channel></rss>